{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelect","className","map","todo","id","completed","classNames","title","type","onClick","handleClick","TodoFilter","onFilter","useState","statusFilter","setStatusFilter","titleFilter","setTitleFilter","value","onChange","event","target","status","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","onClose","loading","setLoading","selectedPerson","setSelectedPerson","useEffect","userId","finally","href","email","name","getFilteredTodos","filter","toLowerCase","includes","App","setTodos","sort","setSort","onSelected","setSelected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecde6ce8.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodoId?: number,\n  onSelect: (todo:Todo) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelect,\n}) => {\n  const handleClick = (todo: Todo) => {\n    onSelect(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className={`button ${selectedTodoId === todo.id ? 'selected' : ''}`}\n                type=\"button\"\n                onClick={() => handleClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames({\n                      'far fa-eye': selectedTodoId !== todo.id,\n                      'far fa-eye-slash': selectedTodoId === todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\n// eslint-disable-next-line import/no-cycle\nimport { Filter } from '../../App';\n\ninterface Props {\n  onFilter: (filters: Filter) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({ onFilter }) => {\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [titleFilter, setTitleFilter] = useState('');\n\n  const handleChangeStatus = (event: ChangeEvent<HTMLSelectElement>) => {\n    setStatusFilter(event.target.value);\n    onFilter({ status: event.target.value, title: titleFilter });\n  };\n\n  const handleChangeInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitleFilter(event.target.value);\n    onFilter({ status: statusFilter, title: event.target.value });\n  };\n\n  const handleClear = () => {\n    setStatusFilter('all');\n    setTitleFilter('');\n    onFilter({ status: 'all', title: '' });\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={statusFilter}\n            onChange={handleChangeStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={titleFilter}\n          onChange={handleChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {titleFilter && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo,\n  onClose: () => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onClose }) => {\n  const [loading, setLoading] = useState(true);\n  const [selectedPerson, setSelectedPerson] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setSelectedPerson)\n      .finally(() => setLoading(false));\n  }, [selectedTodo?.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading\n        ? (\n          <Loader />\n        )\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={onClose}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                {selectedTodo?.completed ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n                {' by '}\n\n                <a href={`mailto:${selectedPerson?.email}`}>\n                  {selectedPerson?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\n// eslint-disable-next-line import/no-cycle\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport interface Filter {\n  title: string,\n  status: string;\n}\n\nfunction getFilteredTodos(todos:Todo[], filter: Filter) {\n  return todos.filter(todo => todo.title.toLowerCase().includes(filter.title.toLowerCase())\n  && (filter.status === 'all' || (filter.status === 'active' && !todo.completed) || (filter.status === 'completed' && todo.completed)));\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [sort, setSort] = useState<Filter>({ status: 'all', title: '' });\n  const [loading, setLoading] = useState(false);\n  const [onSelected, setSelected] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos().then(setTodos).finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onFilter={setSort} />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? <Loader />\n                : (<TodoList todos={getFilteredTodos(todos, sort)} selectedTodoId={onSelected?.id} onSelect={(todo) => setSelected(todo)} />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {onSelected && <TodoModal selectedTodo={onSelected} onClose={() => setSelected(null)} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}